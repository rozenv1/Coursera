## Week 3 Geeting and Cleaning Data - Merge Data

install.packages("plyr")
library(plyr)

## Peer review data
if(!file.exists("./data")){dir.create("./data")}
fileUrl1 = "https://raw.githubusercontent.com/jtleek/dataanalysis/master/week2/007summarizingData/data/reviews.csv"
fileUrl2 = "https://raw.githubusercontent.com/jtleek/dataanalysis/master/week2/007summarizingData/data/solutions.csv"
download.file(fileUrl1,destfile="./data/reviews.csv",method="curl")
download.file(fileUrl2,destfile="./data/solutions.csv",method="curl")
reviews = read.csv("./data/reviews.csv")
solutions <- read.csv("./data/solutions.csv")
head(reviews,2)
head(solutions,2)

# Here you tell the program the specific columns to merge on.
mergedData = merge(reviews, solutions, by.x="solution_id", by.y="id", all=TRUE)
head(mergedData)

# In this case, because you don't indicate what column to merge on, the system creates duplicate rows, one for an observation in each dataframe.
intersect(names(solutions), names(reviews))
mergedData2= merge(reviews, solutions, all = TRUE)

## Using join in the plyr package: this is faster, but less full featured - defaults to left join.
df1 = data.frame(id=sample(1:10),x=rnorm(10))
df2 = data.frame(id=sample(1:10),y=rnorm(10))
arrange(join(df1,df2),id)

## the join in the plyr package is more helpful if you have multiple data frames
df1 = data.frame(id=sample(1:10),x=rnorm(10))
df2 = data.frame(id=sample(1:10),y=rnorm(10))
df3 = data.frame(id=sample(1:10),z=rnorm(10))
dfList = list(df1,df2,df3)
join_all(dfList)

## More on merging data

## * The quick R data merging page - [http://www.statmethods.net/management/merging.html]
## * plyr information - [http://plyr.had.co.nz/](http://plyr.had.co.nz/)
## * Types of joins - [http://en.wikipedia.org/wiki/Join_(SQL)](http://en.wikipedia.org/wiki/Join_(SQL))
